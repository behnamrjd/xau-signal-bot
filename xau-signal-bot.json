{
  "meta": {
    "instanceId": "n8n-xau-signal-bot-fixed"
  },
  "nodes": [
    {
      "parameters": {
        "updates": ["message", "callback_query"]
      },
      "id": "telegram-trigger",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{ $json.message?.text || '' }}",
        "rules": {
          "rules": [
            {
              "value2": "/start",
              "output": 0
            },
            {
              "value2": "/signals",
              "output": 1
            },
            {
              "value2": "/news",
              "output": 2
            },
            {
              "value2": "/analysis",
              "output": 3
            }
          ]
        },
        "fallbackOutput": 4
      },
      "id": "command-switch",
      "name": "Command Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [460, 300]
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "ü§ñ *Welcome to XAU/USD Signal Bot*\n\nüìã *Available Commands:*\n/signals - Get latest gold trading signals\n/news - Market news affecting gold\n/analysis - Current technical analysis\n\nüí° *Important Note:* This bot is for informational purposes only.\n\n‚ö†Ô∏è *Risk Warning:* Always use proper risk management.",
        "parseMode": "Markdown"
      },
      "id": "start-response",
      "name": "Start Command Response",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [680, 180]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "https://query1.finance.yahoo.com/v8/finance/chart/GC=F?interval=5m&range=7d",
        "options": {
          "headers": {
            "User-Agent": "Mozilla/5.0 (compatible; n8n-bot/2.0)",
            "Accept": "application/json"
          },
          "timeout": 15000
        }
      },
      "id": "yahoo-finance-price",
      "name": "Yahoo Finance Price",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [680, 300],
      "continueOnFail": true
    },
    {
      "parameters": {
        "url": "https://www.forexfactory.com/rss.php",
        "options": {
          "maxItems": 5
        }
      },
      "id": "forex-factory-news",
      "name": "Forex Factory News",
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1,
      "position": [680, 420],
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "// Enhanced XAU/USD Technical Analysis\ntry {\n  const priceData = $input.first().json;\n  \n  if (!priceData?.chart?.result?.[0]) {\n    return [{\n      json: {\n        error: 'Price data unavailable',\n        signal: 'HOLD',\n        confidence: 0,\n        price: 'N/A'\n      }\n    }];\n  }\n  \n  const chart = priceData.chart.result[0];\n  const meta = chart.meta;\n  const currentPrice = meta.regularMarketPrice || meta.previousClose;\n  const previousClose = meta.previousClose;\n  const change = previousClose ? ((currentPrice - previousClose) / previousClose * 100) : 0;\n  \n  const quotes = chart.indicators?.quote?.[0] || {};\n  const closes = quotes.close?.filter(price => price !== null).slice(-30) || [];\n  const highs = quotes.high?.filter(price => price !== null).slice(-30) || [];\n  const lows = quotes.low?.filter(price => price !== null).slice(-30) || [];\n  const volumes = quotes.volume?.filter(vol => vol !== null).slice(-30) || [];\n  \n  // RSI Calculation\n  function calculateRSI(prices, period = 14) {\n    if (prices.length < period + 1) return 50;\n    \n    let gains = 0, losses = 0;\n    \n    for (let i = 1; i <= period; i++) {\n      const diff = prices[i] - prices[i - 1];\n      if (diff > 0) gains += diff;\n      else losses += Math.abs(diff);\n    }\n    \n    let avgGain = gains / period;\n    let avgLoss = losses / period;\n    \n    for (let i = period + 1; i < prices.length; i++) {\n      const diff = prices[i] - prices[i - 1];\n      const gain = diff > 0 ? diff : 0;\n      const loss = diff < 0 ? Math.abs(diff) : 0;\n      \n      avgGain = (avgGain * (period - 1) + gain) / period;\n      avgLoss = (avgLoss * (period - 1) + loss) / period;\n    }\n    \n    if (avgLoss === 0) return 100;\n    const rs = avgGain / avgLoss;\n    return 100 - (100 / (1 + rs));\n  }\n  \n  // MACD Calculation\n  function calculateMACD(prices) {\n    if (prices.length < 26) return { macd: 0, signal: 0, histogram: 0 };\n    \n    function calculateEMA(data, period) {\n      const multiplier = 2 / (period + 1);\n      let ema = data[0];\n      \n      for (let i = 1; i < data.length; i++) {\n        ema = (data[i] * multiplier) + (ema * (1 - multiplier));\n      }\n      return ema;\n    }\n    \n    const ema12 = calculateEMA(prices.slice(-12), 12);\n    const ema26 = calculateEMA(prices.slice(-26), 26);\n    const macd = ema12 - ema26;\n    const signal = macd * 0.9;\n    const histogram = macd - signal;\n    \n    return { macd, signal, histogram };\n  }\n  \n  // Order Blocks Detection\n  function detectOrderBlocks(highs, lows, closes, volumes) {\n    const orderBlocks = [];\n    \n    for (let i = 2; i < closes.length - 2; i++) {\n      const currentVolume = volumes[i] || 0;\n      const avgVolume = volumes.slice(Math.max(0, i-5), i).reduce((a, b) => a + b, 0) / 5;\n      \n      if (currentVolume > avgVolume * 1.5) {\n        if (closes[i] > closes[i-1] && closes[i+1] > highs[i]) {\n          orderBlocks.push({\n            type: 'bullish',\n            level: highs[i],\n            strength: currentVolume / avgVolume\n          });\n        }\n        \n        if (closes[i] < closes[i-1] && closes[i+1] < lows[i]) {\n          orderBlocks.push({\n            type: 'bearish',\n            level: lows[i],\n            strength: currentVolume / avgVolume\n          });\n        }\n      }\n    }\n    \n    return orderBlocks.slice(-3);\n  }\n  \n  // Fair Value Gaps Detection\n  function detectFairValueGaps(highs, lows) {\n    const fvgs = [];\n    \n    for (let i = 1; i < highs.length - 1; i++) {\n      if (lows[i-1] > highs[i+1]) {\n        fvgs.push({\n          type: 'bullish',\n          upper: lows[i-1],\n          lower: highs[i+1]\n        });\n      }\n      \n      if (highs[i-1] < lows[i+1]) {\n        fvgs.push({\n          type: 'bearish',\n          upper: lows[i+1],\n          lower: highs[i-1]\n        });\n      }\n    }\n    \n    return fvgs.slice(-2);\n  }\n  \n  // Calculate indicators\n  const rsi = calculateRSI(closes);\n  const macdData = calculateMACD(closes);\n  const orderBlocks = detectOrderBlocks(highs, lows, closes, volumes);\n  const fairValueGaps = detectFairValueGaps(highs, lows);\n  \n  // Signal generation\n  let signal = 'HOLD';\n  let confidence = 50;\n  let reasoning = [];\n  \n  // RSI Analysis\n  if (rsi < 30) {\n    reasoning.push('RSI oversold');\n    confidence += 20;\n    if (change > 0) {\n      signal = 'BUY';\n      confidence += 15;\n    }\n  } else if (rsi > 70) {\n    reasoning.push('RSI overbought');\n    confidence += 20;\n    if (change < 0) {\n      signal = 'SELL';\n      confidence += 15;\n    }\n  }\n  \n  // MACD Analysis\n  if (macdData.macd > macdData.signal) {\n    reasoning.push('MACD bullish');\n    confidence += 10;\n  } else if (macdData.macd < macdData.signal) {\n    reasoning.push('MACD bearish');\n    confidence -= 10;\n  }\n  \n  // Order Blocks Analysis\n  const nearOrderBlock = orderBlocks.find(ob => \n    Math.abs(currentPrice - ob.level) / currentPrice < 0.002\n  );\n  \n  if (nearOrderBlock) {\n    reasoning.push(`Near ${nearOrderBlock.type} order block`);\n    confidence += 15;\n  }\n  \n  // Price momentum\n  if (Math.abs(change) > 1) {\n    reasoning.push(`Strong movement: ${change.toFixed(2)}%`);\n    confidence += 10;\n  }\n  \n  confidence = Math.min(Math.max(confidence, 10), 95);\n  \n  const signalEmoji = {\n    'BUY': 'üöÄ',\n    'SELL': 'üí•',\n    'HOLD': '‚è∏Ô∏è'\n  };\n  \n  return [{\n    json: {\n      price: currentPrice.toFixed(2),\n      change: change.toFixed(2),\n      rsi: rsi.toFixed(1),\n      macd: macdData.macd.toFixed(4),\n      signal: signal,\n      confidence: Math.round(confidence),\n      reasoning: reasoning.join(', '),\n      emoji: signalEmoji[signal] || '‚ö™',\n      orderBlocks: orderBlocks.length,\n      fairValueGaps: fairValueGaps.length,\n      timestamp: new Date().toISOString()\n    }\n  }];\n  \n} catch (error) {\n  console.error('Analysis error:', error);\n  return [{\n    json: {\n      error: 'Analysis failed: ' + error.message,\n      signal: 'HOLD',\n      confidence: 0,\n      price: 'Error',\n      timestamp: new Date().toISOString()\n    }\n  }];\n}"
      },
      "id": "technical-analysis",
      "name": "Technical Analysis",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "model": "gpt-3.5-turbo",
        "options": {
          "temperature": 0.2,
          "maxTokens": 300
        },
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "You are a professional XAU/USD technical analyst. Provide concise trading insights."
            },
            {
              "role": "user",
              "content": "XAU/USD Analysis:\nPrice: ${{ $json.price }}\nChange: {{ $json.change }}%\nRSI: {{ $json.rsi }}\nMACD: {{ $json.macd }}\nSignal: {{ $json.signal }}\nConfidence: {{ $json.confidence }}%\n\nProvide brief analysis."
            }
          ]
        }
      },
      "id": "openai-analysis",
      "name": "AI Analysis",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1.3,
      "position": [1120, 300],
      "continueOnFail": true
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "{{ $node['Technical Analysis'].json.emoji }} *XAU/USD Analysis*\n\nüí∞ *Price:* ${{ $node['Technical Analysis'].json.price }}\nüìä *Change:* {{ $node['Technical Analysis'].json.change }}%\nüìà *RSI:* {{ $node['Technical Analysis'].json.rsi }}\n‚ö° *MACD:* {{ $node['Technical Analysis'].json.macd }}\n\nüéØ *Signal:* {{ $node['Technical Analysis'].json.signal }}\nüî• *Confidence:* {{ $node['Technical Analysis'].json.confidence }}%\n\nüß† *AI Analysis:*\n{{ $node['AI Analysis']?.json?.choices?.[0]?.message?.content || 'AI analysis unavailable' }}\n\nüìã *Technical Factors:*\n{{ $node['Technical Analysis'].json.reasoning }}\n\n‚è∞ *Time:* {{ new Date().toLocaleString('en-US') }}\n‚ö†Ô∏è *Risk Warning:* Use proper risk management",
        "parseMode": "Markdown"
      },
      "id": "signals-response",
      "name": "Signals Response",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "url": "https://www.forexfactory.com/rss.php",
        "options": {
          "maxItems": 3
        }
      },
      "id": "news-rss",
      "name": "News RSS",
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1,
      "position": [680, 540],
      "continueOnFail": true
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.chat.id }}",
        "text": "üì∞ *Latest Gold Market News*\n\n{{ $node['News RSS'].json?.length > 0 ? $node['News RSS'].json.slice(0,3).map((item, index) => `${index + 1}. *${item.title}*\\n   üîó [Read More](${item.link})\\n   üìÖ ${new Date(item.pubDate).toLocaleDateString('en-US')}`).join('\\n\\n') : 'No recent news available' }}\n\nüí° *Note:* News events can significantly impact gold prices.",
        "parseMode": "Markdown"
      },
      "id": "news-response",
      "name": "News Response",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [900, 540]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minute",
              "expression": "*/20"
            }
          ]
        }
      },
      "id": "schedule-trigger",
      "name": "Auto Schedule",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [240, 600]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "confidence-check",
              "leftValue": "={{ $json.confidence }}",
              "rightValue": 75,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ]
        }
      },
      "id": "signal-filter",
      "name": "Signal Quality Filter",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1120, 600]
    },
    {
      "parameters": {
        "chatId": "YOUR_CHANNEL_ID",
        "text": "üö® *Auto XAU/USD Signal*\n\n{{ $node['Technical Analysis'].json.emoji }} *{{ $node['Technical Analysis'].json.signal }}*\n\nüí∞ Price: ${{ $node['Technical Analysis'].json.price }}\nüìä Change: {{ $node['Technical Analysis'].json.change }}%\nüî• Confidence: {{ $node['Technical Analysis'].json.confidence }}%\n\nüìã {{ $node['Technical Analysis'].json.reasoning }}\n\n‚è∞ {{ new Date().toLocaleString('en-US') }}",
        "parseMode": "Markdown"
      },
      "id": "auto-broadcast",
      "name": "Auto Signal Broadcast",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [1340, 600]
    }
  ],
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Command Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Command Switch": {
      "main": [
        [
          {
            "node": "Start Command Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Yahoo Finance Price",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "News RSS",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Yahoo Finance Price",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Yahoo Finance Price": {
      "main": [
        [
          {
            "node": "Technical Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Technical Analysis": {
      "main": [
        [
          {
            "node": "AI Analysis",
            "type": "main",
            "index": 0
          },
          {
            "node": "Signal Quality Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Analysis": {
      "main": [
        [
          {
            "node": "Signals Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "News RSS": {
      "main": [
        [
          {
            "node": "News Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Auto Schedule": {
      "main": [
        [
          {
            "node": "Yahoo Finance Price",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Signal Quality Filter": {
      "main": [
        [
          {
            "node": "Auto Signal Broadcast",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 2,
  "updatedAt": "2025-05-25T11:30:00.000Z",
  "versionId": "1.0"
}
